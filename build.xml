<?xml version="1.0" encoding="utf-8" ?>
<project name="Charba" default="buildBinaryGwt" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

	<!-- 
	    Apache Ivy task definition and load properties
	 -->
	<loadproperties srcfile="ivymoduleconfiguration.properties" />

	<!-- 
		CHARBA configuration and paths
	-->
	<property name="charba.description" value="Charba - J2CL and GWT charts library based on CHART.JS"/>
	<property name="charba.built.by" value="www.pepstock.org" />
	<tstamp>
		<format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
	</tstamp>
	<property name="src.dir" value="src" />
	<property name="codegen.dir" value="codegen" />
	<property name="classes.dir" value="classes" />
	<property name="lib.dir" value="lib-ivy" />
	<property name="javadoc.dir" value="javadoc" />
	<property name="resources.dir" value="resources" />
	<property name="retrieve.dir" value="retrieve" />
	<property name="dist.dir" value="dist" />
	<property name="temp.dir" value="temp"/>
	<property name="log.dir" value="log"/>
	<property name="manifest.file" value="${temp.dir}/MANIFEST.MF"/>
	<property name="all.sources.archive.file" value="${dist.dir}/charba-${ivy.pubrevision}-sources.zip" />
		
	<!-- 
		CHARBA target properties for J2CL distribution
	-->
	<property name="bin.archive.file" value="${dist.dir}/charba-${ivy.pubrevision}.jar" />
	<property name="sources.archive.file" value="${dist.dir}/charba-${ivy.pubrevision}-sources.jar" />
	<property name="javadoc.archive.file" value="${dist.dir}/charba-${ivy.pubrevision}-javadoc.jar" />
	<property name="artifact.pattern" value="${dist.dir}/[artifact]-[revision](-[classifier]).[ext]" />

	<!-- 
		CHARBA target properties for GWT distribution 
	-->
	<property name="bin.gwt.archive.file" value="${dist.dir}/charba-${ivy.pubrevision}-gwt.jar" />
	<property name="sources.gwt.archive.file" value="${dist.dir}/charba-${ivy.pubrevision}-gwt-sources.jar" />
	<property name="javadoc.gwt.archive.file" value="${dist.dir}/charba-${ivy.pubrevision}-gwt-javadoc.jar" />
	<property name="javascript.package" value="org/pepstock/charba/client/resources/js" />
	<property name="javascript.src.dir" value="${src.dir}/${javascript.package}" />
	<property name="javascript.dist.dir" value="${classes.dir}/${javascript.package}" />
	<property name="css.package" value="org/pepstock/charba/client/resources/style" />
	<property name="css.src.dir" value="${src.dir}/${css.package}" />
	<property name="css.dist.dir" value="${classes.dir}/${css.package}" />

	<!-- 
		CHARBA target properties for java script files
	-->
	<property name="javascript.charba.file" value="charba.helper.js" />
	<property name="javascript.charba.minify.file" value="charba.helper.min.js" />

	<!-- 
		LABELS CHART.JS plugin
	-->
	<property name="javascript.labels.file" value="chartjs-plugin-labels.js" />
	<property name="javascript.labels.minify.file" value="chartjs-plugin-labels.min.js" />
	<!-- 
		TOAST utility
	-->
	<property name="javascript.toast.file" value="charba.toast.js" />
	<property name="javascript.toast.minify.file" value="charba.toast.min.js" />
	<property name="css.toast.file" value="charba.toast.css" />
	<property name="css.toast.minify.file" value="charba.toast.min.css" />
	<!-- 
		CHART.JS 
	-->
	<property name="javascript.chartjs.minify.file" value="chart.min.js" />

	<!-- 
		EXTENSIONS CHART.JS plugins and controllers
	-->
	<property name="javascript.annotation.minify.file" value="chartjs-plugin-annotation.min.js" />
	<property name="javascript.datalabels.minify.file" value="chartjs-plugin-datalabels.min.js" />
	<property name="javascript.zoom.minify.file" value="chartjs-plugin-zoom.min.js" />
	<property name="javascript.hammer.minify.file" value="hammer.min.js" />
	<property name="javascript.geo.minify.file" value="chartjs-chart-geo.min.js" />
	<property name="javascript.treemap.minify.file" value="chartjs-chart-treemap.min.js" />
	<property name="javascript.matrix.minify.file" value="chartjs-chart-matrix.min.js" />
	<property name="javascript.sankey.minify.file" value="chartjs-chart-sankey.min.js" />
	<property name="javascript.gradient.minify.file" value="chartjs-plugin-gradient.min.js" />

	<!-- 
		CHART.JS date adapters 
	-->
	<property name="javascript.chartjs.luxon.minify.file" value="chartjs-adapter-luxon.min.js" />
	<property name="javascript.luxon.minify.file" value="luxon.min.js" />

	<!-- 
		CHARBA controller template 
	-->
	<property name="javascript.controller.template.dir" value="${codegen.dir}/org/pepstock/charba/codegen" />
	<property name="javascript.controller.template.file" value="ExtendedController.template" />
	<property name="javascript.controller.template.path" value="${javascript.controller.template.dir}/${javascript.controller.template.file}" />
	<property name="javascript.controller.template.temp.path" value="${temp.dir}/${javascript.controller.template.file}" />

	<!-- 
		JAVA compiler options 
	-->
	<property name="javac.debug" value="true" />
	<property name="javac.debuglevel" value="lines,vars,source" />
	<property name="javac.source" value="11" />
	<property name="javac.target" value="11" />
	<property name="javac.includeantruntime" value="false" />
	<property name="javac.nowarn" value="true" />
	<property name="javadoc.source" value="11" />
	
	<!--
		IVY targets for getting build dependencies and GHA CI needed libraries
	-->
	<property name="ivy.file" value="ivy.xml"/>
	<property name="ant.jar.dir" value="${user.home}/.ant/lib" />

	<!-- 
	**** IVY TARGET SECTIONS **** 
	-->
	
	<!--
        IVY - Download IVY 
    -->
	<target name="ivyDownload">
		<!-- Download the Ivy jar and then invoke it to download the others task libs -->
		<mkdir dir="${ant.jar.dir}"/>
		<get src="https://repo1.maven.org/maven2/org/apache/ivy/ivy/${depver.ivy}/ivy-${depver.ivy}.jar"
	        dest="${ant.jar.dir}" usetimestamp="true"/>
		<antcall target="ivyTaskdef" />
	</target>
	
	<!--
        IVY - ANT task definitions for IVY 
    -->
	<target name="ivyTaskdef">
		<mkdir dir="${ant.jar.dir}"/>
		<!-- Define the ivyPath with all jars located in ${ant.jar.dir} --> 
		<path id="ivyPath">
			<fileset dir="${ant.jar.dir}">
				<include name="**/ivy-${depver.ivy}.jar"/>
			</fileset>
		</path>
		<!-- Define the Ivy tasks -->
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivyPath" />
	</target>
	
	<!--
        IVY - Setup IVY 
    -->
	<target name="ivySetup" depends="ivyDownload, ivyTaskdef" />
	
	<!--
        IVY - Retrieves by IVY the needed jar 
    -->
	<macrodef name="ivyRetrieve">
		<attribute name="ivyFile"/>
		<attribute name="conf"/>
		<attribute name="pattern"/>
		<attribute name="pathId"/>
		<sequential>
			<ivy:retrieve file="@{ivyFile}" conf="@{conf}" pattern="@{pattern}" pathid="@{pathId}" sync="true"/>
			<ivy:report todir="${log.dir}" graph="false"/>
		</sequential>
	</macrodef>
	
	<target name="ivyRetrieveCompile" depends="ivyTaskdef">
		<ivyRetrieve ivyfile="${ivy.file}" conf="compile" pathid="ivyPath-compile" pattern="${lib.dir}/compile/[artifact]-[revision](-[classifier]).[ext]"/>
	</target>

	<target name="ivyRetrieveRuntime" depends="ivyTaskdef">
		<ivyRetrieve ivyfile="${ivy.file}" conf="runtime" pathid="ivyPath-runtime" pattern="${lib.dir}/runtime/[artifact]-[revision](-[classifier]).[ext]"/>
	</target>

	<target name="ivyRetrieve" depends="ivyRetrieveCompile, ivyRetrieveRuntime" />

	<!--
        IVY - Makes POM file 
    -->
	<macrodef name="makePom">
		<attribute name="pomFile"/>
		<attribute name="name"/>
		<attribute name="description"/>
		<attribute name="version"/>
		<attribute name="url"/>
		<sequential>
			<property name="ivy.pom.name" value="@{name}"/>
			<property name="ivy.pom.description" value="@{description}"/>
			<property name="ivy.pom.version" value="@{version}"/>
			<property name="ivy.pom.url" value="@{url}"/>
			<property name="ivy.pom.packaging" value="jar"/>
			
			<ivy:makepom ivyfile="ivy.xml" pomfile="@{pomFile}" templatefile="pom.template" conf="runtime">
				<mapping conf="runtime" scope="runtime" />
			</ivy:makepom>
		</sequential>
	</macrodef>

	<target name="ivyMakePom" depends="ivyTaskdef">
		<makePom pomfile="${dist.dir}/charba-${ivy.pubrevision}.pom"
			name="Charba" description="${charba.description}" 
			version="${ivy.pubrevision}" url="www.pepstock.org"/>
	</target>

	<target name="ivyMakePomGwt" depends="ivyTaskdef">
		<makePom pomfile="${dist.dir}/charba-${ivy.pubrevision}-gwt.pom"
			name="Charba GWT" description="${charba.description}" 
			version="${ivy.pubrevision}-gwt" url="www.pepstock.org"/>
	</target>
	
	<!--
        IVY - Publishes official release into MVN 
    -->
	<macrodef name="ivyPublish">
		<attribute name="resolver"/>
		<attribute name="version"/>
		
		<sequential>
			<ivy:resolve file="${ivy.file}" revision="@{version}"/>
			<ivy:publish resolver="@{resolver}" pubrevision="@{version}" forcedeliver="true" overwrite="true"  
				publishivy="false" artifactspattern="${artifact.pattern}" />
		</sequential>
	</macrodef>

	<target name="ivyPublishRelease" depends="ivyTaskdef">
		<ivyPublish resolver="nexus-releases" version="${ivy.pubrevision}" />
	</target>

	<target name="ivyPublishReleaseGwt" depends="ivyTaskdef">
		<ivyPublish resolver="nexus-releases" version="${ivy.pubrevision}-gwt" />
	</target>

	<!--
        IVY - Publishes snapshots into MVN 
    -->
	<target name="ivyPublishSnapshot" depends="ivyTaskdef">
		<ivyPublish resolver="nexus-snapshots" version="${ivy.pubrevision}-SNAPSHOT" />
	</target>
	
	<target name="ivyPublishSnapshotGwt" depends="ivyTaskdef">
		<ivyPublish resolver="nexus-snapshots" version="${ivy.pubrevision}-gwt-SNAPSHOT" />
	</target>

	<!-- 
	**** COMMON SECTIONS **** 
	-->

	<!-- 
		CHARBA - Removes the unused forders and contents from all used folders 
	-->
	<target name="clean" description="Cleans folders">
		<delete failonerror="false" includeemptydirs="true">
			<!-- includes="**/*" attribute deletes only content leaving directory empty -->
			<fileset dir="${classes.dir}" includes="**/*"/>
			<fileset dir="${dist.dir}" includes="**/*"/>
			<fileset dir="${javadoc.dir}" includes="**/*"/>
			<fileset dir="${temp.dir}" includes="**/*" />
			<fileset dir="${log.dir}" includes="**/*" />
		</delete>
	</target>
	
	<!--
		CHARBA - Closure compiler definition 
	-->
	<target name="init" depends="ivySetup, ivyRetrieveCompile">
		<!-- Define Google Closure task -->
    	<taskdef name="closure-compiler" classname="com.google.javascript.jscomp.ant.CompileTask" classpathref="ivyPath-compile" />
	</target>
	
	<!--
        CHARBA - CREATE JS compiler
    -->
	<macrodef name="google-closure-compiler">
		<attribute name="source" />
		<attribute name="sourceDir" />
		<attribute name="target" />
		<sequential>
			<echo>Minify JAVASCRIPT file "@{source}" to "@{target}" </echo>
			<closure-compiler compilationLevel="simple" debug="true" output="@{target}" forceRecompile="true">
				<sources dir="@{sourceDir}">
					<file name="@{source}" />
				</sources>
			</closure-compiler>
		</sequential>
	</macrodef>

	<!--
        CHARBA - CREATE CSS compiler
    -->
	<macrodef name="google-closure-stylesheets">
		<attribute name="source" />
		<attribute name="target" />
		<sequential>
			<echo>Minify CSS file "@{source}" to "@{target}" </echo>
			<java classname="com.google.common.css.compiler.commandline.ClosureCommandLineCompiler" fork="true">
				<classpath>
					<path refid="ivyPath-runtime" />
					<path refid="ivyPath-compile"/>
				</classpath>
				<arg value="@{source}"/>
				<arg value="--output-file"/>
				<arg value="@{target}"/>
			</java>
		</sequential>
	</macrodef>
		
	<!--
        CHARBA - JAVA compile, MINIFY CHARBA javascript helper, COPY resources into classes folder
    -->
	<target name="compile" depends="clean, init, ivyRetrieveRuntime">
		<mkdir dir="${classes.dir}"/>
		<mkdir dir="${css.dist.dir}"/>
		<javac includes="**" encoding="utf-8" destdir="${classes.dir}" includeantruntime="${javac.includeantruntime}" source="${javac.source}" target="${javac.target}" nowarn="${javac.nowarn}" debug="${javac.debug}" debuglevel="${javac.debuglevel}" createMissingPackageInfoClass="false">
			<src path="${src.dir}"/>
			<src path="${codegen.dir}"/>	
			<classpath>
				<path refid="ivyPath-runtime" />
				<path refid="ivyPath-compile"/>
			</classpath>
		</javac>
		<!-- minify CHARBA Helper-->
		<google-closure-compiler target="${javascript.dist.dir}/${javascript.charba.minify.file}" sourceDir="${javascript.src.dir}" source="${javascript.charba.file}" />
		<!-- minify LABELS CHART.JS plugin -->
		<google-closure-compiler target="${javascript.dist.dir}/${javascript.labels.minify.file}" sourceDir="${javascript.src.dir}" source="${javascript.labels.file}" />
		<!-- minify TOAST utility -->
		<google-closure-compiler target="${javascript.dist.dir}/${javascript.toast.minify.file}" sourceDir="${javascript.src.dir}" source="${javascript.toast.file}" />
		<google-closure-stylesheets source="${css.src.dir}/${css.toast.file}" target="${css.dist.dir}/${css.toast.minify.file}"/>
		<!-- copy all sources is necessary as J2CL-GWT needs sources: exclude charba.helper.js and labels plugin because already created by minify and package-info-->
		<copy todir="${classes.dir}">
			<fileset dir="${src.dir}">
				<exclude name="**/package-info.java"/>
				<exclude name="**/${javascript.charba.file}"/>
				<exclude name="**/${javascript.labels.file}"/>
				<exclude name="**/${javascript.toast.file}"/>
				<exclude name="**/${css.toast.file}"/>
			</fileset>
			<fileset dir="${codegen.dir}"/>
		</copy>
		<!-- javascript resources (all libraries embeddable into CHARBA) to classes folder -->
		<copy todir="${javascript.dist.dir}">
			<fileset dir="${resources.dir}">
				<include name="**/*.js"/>
			</fileset>
		</copy>
		<!-- css resources (all libraries embeddable into CHARBA) to classes folder -->
		<copy todir="${css.dist.dir}">
			<fileset dir="${resources.dir}">
				<include name="**/*.css"/>
			</fileset>
		</copy>
	</target>

	<!--
        CHARBA - JAVADOC execution for J2CL
    -->
	<target name="javadoc" depends="ivyRetrieve">
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${javadoc.dir}" includes="**/*"/>
		</delete>
		<!-- exclude from java doc all classes where GWT is used and all files not JAVA -->
		<javadoc destdir="${javadoc.dir}" useexternalfile="yes" author="true" version="true" use="true" encoding="utf-8" source="${javadoc.source}"
			windowtitle="${charba.description}">
			<fileset dir="${src.dir}">
				<include name="org/pepstock/**" />
				<exclude name="**/*.js" />
				<exclude name="**/*.css" />
				<exclude name="**/*.xml" />
				<exclude name="org/pepstock/charba/client/gwt/**"/>
				<exclude name="org/pepstock/charba/client/DeferredCharba.java"/>
				<exclude name="org/pepstock/charba/client/resources/DeferredResources.java"/>
				<exclude name="org/pepstock/charba/client/resources/DeferredResourcesBundle.java"/>
				<exclude name="org/pepstock/charba/client/resources/EntryPointStarter.java"/>
				<exclude name="org/pepstock/charba/client/resources/InternalInjectableTextResource.java"/>
				<exclude name="org/pepstock/charba/client/resources/InjectableTextResource.java"/>
				<exclude name="org/pepstock/charba/client/resources/ResourceLoadException.java"/>
			</fileset>
			<classpath>
				<path refid="ivyPath-compile" />
				<fileset dir="${classes.dir}" />
				<pathelement path="${java.class.path}" />
			</classpath>
			<link offline="false" href="https://docs.oracle.com/en/java/javase/11/docs/api/" />
			<link offline="false" href="http://www.gwtproject.org/javadoc/latest/" />
		</javadoc>
		<!--
	        CHARBA - adds workaroung to fix issues on JAVADOC 11:
	        - https://stackoverflow.com/questions/52326318/maven-javadoc-search-redirects-to-undefined-url
	        - This bug should be fixed in JDK 12: https://bugs.openjdk.java.net/browse/JDK-8215291 
	    -->
		<echo file="${javadoc.dir}/search.js" append="true">getURLPrefix = function(ui) { return ""; };</echo>
	</target>

	<!--
        CHARBA - JAVADOC execution for GWT
    -->
	<target name="javadocGwt" depends="ivyRetrieve">
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${javadoc.dir}" includes="**/*"/>
		</delete>
		<javadoc destdir="${javadoc.dir}" useexternalfile="yes" author="true" version="true" use="true" encoding="utf-8" source="${javadoc.source}"
			windowtitle="${charba.description}">
			<classpath>
				<path refid="ivyPath-compile" />
				<fileset dir="${classes.dir}" />
				<pathelement path="${java.class.path}" />
			</classpath>
			<packageset dir="${src.dir}" defaultexcludes="yes">
				<include name="org/pepstock/**" />
			</packageset>
			<link offline="false" href="https://docs.oracle.com/en/java/javase/11/docs/api/" />
			<link offline="false" href="http://www.gwtproject.org/javadoc/latest/" />
		</javadoc>
		<!--
	        CHARBA - adds workaroung to fix issues on JAVADOC 11:
	        - https://stackoverflow.com/questions/52326318/maven-javadoc-search-redirects-to-undefined-url
	        - This bug should be fixed in JDK 12: https://bugs.openjdk.java.net/browse/JDK-8215291 
	    -->
		<echo file="${javadoc.dir}/search.js" append="true">getURLPrefix = function(ui) { return ""; };</echo>
	</target>

	<!--
        CHARBA - adds GA statement in javadoc
    -->
	<target name="addGA" depends="javadocGwt">
		<replace dir="${javadoc.dir}" value="&lt;head&gt;&lt;script&gt;window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;ga('create', 'UA-46259978-1', 'auto');ga('send', 'pageview');&lt;/script&gt;&lt;script async src='https://www.google-analytics.com/analytics.js'&gt;&lt;/script&gt;">
		  <include name="**/*.html"/>
		  <replacetoken><![CDATA[<head>]]></replacetoken>
		</replace>
	</target>

	<!--
        CHARBA - CREATE sources jar file for J2CL
    -->
	<target name="createSources" depends="makeManifest">
		<!-- exclude from jar all classes where GWT is used, all javascript sources (not needed because embedded into java classes) and code gen source folder -->
		<jar jarfile="${sources.archive.file}" manifest="${manifest.file}" encoding="UTF-8">
			<fileset dir="${classes.dir}">
				<include name="**/*"/>
				<exclude name="**/*.class"/>
				<exclude name="org/pepstock/charba/client/gwt/**"/>
				<exclude name="org/pepstock/charba/client/DeferredCharba.java"/>
				<exclude name="org/pepstock/charba/client/resources/DeferredResources.java"/>
				<exclude name="org/pepstock/charba/client/resources/DeferredResourcesBundle.java"/>
				<exclude name="org/pepstock/charba/client/resources/EntryPointStarter.java"/>
				<exclude name="org/pepstock/charba/client/resources/InternalInjectableTextResource.java"/>
				<exclude name="org/pepstock/charba/client/resources/InjectableTextResource.java"/>
				<exclude name="org/pepstock/charba/client/resources/ResourceLoadException.java"/>
				<exclude name="org/pepstock/charba/client/resources/js/**"/>
				<exclude name="org/pepstock/charba/client/resources/style/**"/>
				<exclude name="org/pepstock/charba/codegen/**"/>
			</fileset>
			<!-- includes license -->
			<fileset dir=".">
			  <filename name="LICENSE"/>
			</fileset>
		</jar>
	</target>

	<!-- 
		CHARBA - CREATE manifest file shared among all archives in a temporary directory 
	-->
	<target name="makeManifest">
		<mkdir dir="${temp.dir}"/>
		<manifest file="${manifest.file}">
			<section name="Charba">
				<attribute name="Version" value="${ivy.pubrevision}" />
				<attribute name="Built-By" value="${charba.built.by}" />
				<attribute name="Creation-time" value="${TODAY}" />
			</section>
		</manifest>
	</target>
	
	<!--
        CHARBA - CREATE sources jar file for GWT
    -->
	<target name="createSourcesGwt" depends="makeManifest">
		<!-- exclude from jar the GWT module defined for Charba J2CL and code gen source folder -->
		<jar jarfile="${sources.gwt.archive.file}" manifest="${manifest.file}" encoding="UTF-8">
			<fileset dir="${classes.dir}">
				<include name="**/*"/>
				<exclude name="**/*.class"/>
				<exclude name="org/pepstock/charba/codegen/**"/>
				<exclude name="org/pepstock/charba/client/resources/externs/**"/>
				<exclude name="org/pepstock/charba/client/gwt/Charba.gwt.xml"/>
				<exclude name="org/pepstock/charba/client/resources/js/${javascript.charba.minify.file}"/>
				<exclude name="org/pepstock/charba/client/resources/js/${javascript.labels.minify.file}"/>
				<exclude name="org/pepstock/charba/client/resources/js/${javascript.toast.minify.file}"/>
				<exclude name="org/pepstock/charba/client/resources/js/${javascript.annotation.minify.file}"/>	
				<exclude name="org/pepstock/charba/client/resources/js/${javascript.datalabels.minify.file}"/>
				<exclude name="org/pepstock/charba/client/resources/js/${javascript.zoom.minify.file}"/>	
				<exclude name="org/pepstock/charba/client/resources/js/${javascript.hammer.minify.file}"/>	
				<exclude name="org/pepstock/charba/client/resources/js/${javascript.geo.minify.file}"/>	
				<exclude name="org/pepstock/charba/client/resources/js/${javascript.treemap.minify.file}"/>	
				<exclude name="org/pepstock/charba/client/resources/js/${javascript.matrix.minify.file}"/>	
				<exclude name="org/pepstock/charba/client/resources/js/${javascript.sankey.minify.file}"/>	
				<exclude name="org/pepstock/charba/client/resources/style/**"/>
			</fileset>
			<!-- includes license -->
			<fileset dir=".">
			  <filename name="LICENSE"/>
			</fileset>
		</jar>
	</target>

	<!--
        CHARBA - CREATE javadoc jar file for J2CL
    -->
	<macrodef name="createJavadoc">
		<attribute name="file" />
		
		<sequential>
			<jar jarfile="@{file}" encoding="UTF-8">
				<fileset dir="${javadoc.dir}" />
				<!-- includes license -->
				<fileset dir=".">
				  <filename name="LICENSE"/>
				</fileset>
				<manifest>
					<section name="Charba">
						<attribute name="Version" value="${ivy.pubrevision}" />
						<attribute name="Built-By" value="${charba.built.by}" />
						<attribute name="Creation-time" value="${TODAY}" />
					</section>
				</manifest>
			</jar>
		</sequential>
	</macrodef>
	
	<target name="createJavadoc" depends="javadoc">
		<createJavadoc file="${javadoc.archive.file}"/>
	</target>

	<!--
        CHARBA - CREATE javadoc jar file for GWT
    -->
	<target name="createJavadocGwt" depends="javadocGwt">
		<createJavadoc file="${javadoc.gwt.archive.file}"/>
	</target>

	<!--
        CHARBA - CREATE classes jar file for J2CL
    -->
	<target name="createBinary" depends="compile, makeManifest">
		<!-- exclude from jar all classes where GWT is used, all javascript sources (not needed because embedded into java classes) and code gen source folder -->
		<jar jarfile="${bin.archive.file}" manifest="${manifest.file}" encoding="UTF-8">
			<fileset dir="${classes.dir}">
				<include name="**/*"/>
				<exclude name="org/pepstock/charba/codegen/**"/>
				<exclude name="org/pepstock/charba/client/gwt/**"/>
				<exclude name="org/pepstock/charba/client/DeferredCharba*"/>
				<exclude name="org/pepstock/charba/client/resources/DeferredResources*"/>
				<exclude name="org/pepstock/charba/client/resources/EntryPointStarter*"/>
				<exclude name="org/pepstock/charba/client/resources/InternalInjectableTextResource*"/>
				<exclude name="org/pepstock/charba/client/resources/InjectableTextResource*"/>
				<exclude name="org/pepstock/charba/client/resources/ResourceLoadException*"/>
				<exclude name="org/pepstock/charba/client/resources/js/**"/>
				<exclude name="org/pepstock/charba/client/resources/style/**"/>
			</fileset>
			<!-- includes license -->
			<fileset dir=".">
			  <filename name="LICENSE"/>
			</fileset>
		</jar>
	</target>

	<!--
        CHARBA - CREATE classes jar file for GWT
    -->
	<target name="createBinaryGwt" depends="compile, makeManifest">
		<!-- override the GWT module defined for Charba J2CL with GWT one -->
		<copy file="${classes.dir}/org/pepstock/charba/client/gwt/Charba.gwt.xml" todir="${classes.dir}/org/pepstock/charba"/>
		<!-- exclude from jar the GWT module defined for Charba GWT (because copied on right folder above) and code gen source folder -->
		<jar jarfile="${bin.gwt.archive.file}" manifest="${manifest.file}" encoding="UTF-8">
			<fileset dir="${classes.dir}">
				<include name="**/*"/>
				<exclude name="org/pepstock/charba/codegen/**"/>
				<exclude name="org/pepstock/charba/client/resources/externs/**"/>
				<exclude name="org/pepstock/charba/client/gwt/Charba.gwt.xml"/>
				<exclude name="org/pepstock/charba/client/resources/js/${javascript.charba.minify.file}"/>
				<exclude name="org/pepstock/charba/client/resources/js/${javascript.labels.minify.file}"/>
				<exclude name="org/pepstock/charba/client/resources/js/${javascript.toast.minify.file}"/>
				<exclude name="org/pepstock/charba/client/resources/js/${javascript.annotation.minify.file}"/>	
				<exclude name="org/pepstock/charba/client/resources/js/${javascript.datalabels.minify.file}"/>
				<exclude name="org/pepstock/charba/client/resources/js/${javascript.zoom.minify.file}"/>	
				<exclude name="org/pepstock/charba/client/resources/js/${javascript.hammer.minify.file}"/>	
				<exclude name="org/pepstock/charba/client/resources/js/${javascript.geo.minify.file}"/>	
				<exclude name="org/pepstock/charba/client/resources/js/${javascript.treemap.minify.file}"/>	
				<exclude name="org/pepstock/charba/client/resources/js/${javascript.matrix.minify.file}"/>	
				<exclude name="org/pepstock/charba/client/resources/js/${javascript.sankey.minify.file}"/>	
				<exclude name="org/pepstock/charba/client/resources/style/**"/>
			</fileset>
			<!-- includes license -->
			<fileset dir=".">
			  <filename name="LICENSE"/>
			</fileset>
		</jar>
	</target>

	<!--
        CHARBA - CREATE all sources ZIP file
    -->
	<target name="createAllSources">
		<!-- exclude from zip all classes and code gen source folder -->
		<zip destfile="${all.sources.archive.file}">
			<fileset dir="${classes.dir}">
				<include name="**/*"/>
				<exclude name="**/*.class"/>
				<exclude name="org/pepstock/charba/codegen/**"/>
			</fileset>
			<!-- includes license -->
			<fileset dir=".">
			  <filename name="LICENSE"/>
			</fileset>
		</zip>
	</target>

	<!--
        CHARBA - BUILD all binaries
    -->
	<target name="buildBinary" depends="createBinary" />

	<!--
        CHARBA - BUILD all binaries
    -->
	<target name="buildBinaryGwt" depends="createBinaryGwt" />

	<!--
        CHARBA - BUILD all jars artifacts: classes, sources and javadoc
        PAY attentio that the sequence of target dependencies MUST NOT be changed
    -->
	<target name="buildAll" depends="buildBinary, createSources, createJavadoc, createAllSources, buildBinaryGwt, createSourcesGwt, createJavadocGwt" />

	<!--
        CHARBA - BUILD all jars artifacts: classes, sources and javadoc
        PAY attentio that the sequence of target dependencies MUST NOT be changed
    -->
	<target name="deployJavadoc" depends="buildBinaryGwt, addGA" />

	<!--
        CHARBA - Code generator to wrap the java script files into java classes
    -->
	<target name="codeGenerator-InjectableResources" depends="init, ivyRetrieveRuntime">
		<javac srcdir="${codegen.dir}" includes="**" encoding="utf-8" destdir="${classes.dir}" includeantruntime="${javac.includeantruntime}" source="${javac.source}" target="${javac.target}" nowarn="${javac.nowarn}" debug="${javac.debug}" debuglevel="${javac.debuglevel}" createMissingPackageInfoClass="false">
			<classpath>
				<path refid="ivyPath-runtime" />
				<path refid="ivyPath-compile"/>
			</classpath>
		</javac>
		<!-- minify CHARBA Helper-->
		<google-closure-compiler target="${javascript.dist.dir}/${javascript.charba.minify.file}" sourceDir="${javascript.src.dir}" source="${javascript.charba.file}" />
		<!-- minify LABELS CHART.JS plugin -->
		<google-closure-compiler target="${javascript.dist.dir}/${javascript.labels.minify.file}" sourceDir="${javascript.src.dir}" source="${javascript.labels.file}" />
		<!-- minify TOAST utility -->
		<google-closure-compiler target="${javascript.dist.dir}/${javascript.toast.minify.file}" sourceDir="${javascript.src.dir}" source="${javascript.toast.file}" />
		<google-closure-stylesheets source="${css.src.dir}/${css.toast.file}" target="${css.dist.dir}/${css.toast.minify.file}"/>
		<!-- copy all sources is necessary as J2CL-GWT needs sources: exclude charba.helper.js and labels plugin because already created by minify and package-info-->
		<copy todir="${javascript.dist.dir}">
			<fileset dir="${resources.dir}">
				<include name="**/*.js"/>
			</fileset>
		</copy>
		<copy todir="${css.dist.dir}">
			<fileset dir="${resources.dir}">
				<include name="**/*.css"/>
			</fileset>
		</copy>
		<!-- invokes code generator -->
		<echo>Creating CHARBA injectable resources...</echo>
		<java classname="org.pepstock.charba.codegen.InjectableResourceGenerator">
		  <sysproperty key="java.util.logging.SimpleFormatter.format" value="%4$-7s %5$s %n"/>
		  <classpath>
		    <pathelement location="${classes.dir}"/>
		  </classpath>
		</java>
		<echo>Created CHARBA injectable resources</echo>
	</target>

	<!--
        CHARBA - Code generator to wrap the java script file for controller template into java class
    -->
	<target name="codeGenerator-ControllerTemplate" depends="init, ivyRetrieveRuntime">
		<javac srcdir="${codegen.dir}" includes="**" encoding="utf-8" destdir="${classes.dir}" includeantruntime="${javac.includeantruntime}" source="${javac.source}" target="${javac.target}" nowarn="${javac.nowarn}" debug="${javac.debug}" debuglevel="${javac.debuglevel}" createMissingPackageInfoClass="false">
			<classpath>
				<path refid="ivyPath-runtime" />
				<path refid="ivyPath-compile"/>
			</classpath>
		</javac>
		<!-- invokes code generator -->
		<echo>Creating CHARBA controller template...</echo>
		<java classname="org.pepstock.charba.codegen.ControllerTemplateGenerator">
		  <classpath>
		    <pathelement location="${classes.dir}"/>
		  </classpath>
		</java>
		<echo>Created CHARBA controller template</echo>
	</target>

	<!-- 
	**** RETRIEVE javascript libraries **** 
	-->
	
	<!--
        CHARBA - gets the javascript minify of CHART.JS and datalabels plugin
        PAY ATTENTION: these targets are insterted only for documentation and to get javascripts but before to apply must be checked
    -->
	<target name="retrieveOfficialChartJS">
		<echo>Retrieve CHART.JS minify javascript resource - version ${depver.chartjs}</echo>
		<mkdir dir="${retrieve.dir}" />
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${retrieve.dir}" includes="${javascript.chartjs.minify.file}" />
		</delete>
		<get src="https://cdn.jsdelivr.net/npm/chart.js@${depver.chartjs}/dist/chart.min.js" dest="${retrieve.dir}/${javascript.chartjs.minify.file}" />
	</target>

	<target name="retrieveLatestChartJS">
		<echo>Retrieve CHART.JS minify javascript resource - latest build [MUST not be used for production purposes]</echo>
		<mkdir dir="${retrieve.dir}" />
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${retrieve.dir}" includes="${javascript.chartjs.minify.file}" />
		</delete>
		<get src="https://www.chartjs.org/dist/master/chart.min.js" dest="${retrieve.dir}/${javascript.chartjs.minify.file}" />
	</target>

	<target name="retrieveOfficialDatalabels">
		<echo>Retrieve DATALABELS plugin minify javascript resource - version ${depver.datalabels}</echo>
		<mkdir dir="${retrieve.dir}" />
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${retrieve.dir}" includes="${javascript.datalabels.minify.file}" />
		</delete>
		<get src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@${depver.datalabels}" dest="${retrieve.dir}/${javascript.datalabels.minify.file}" />
	</target>
	
	<target name="retrieveOfficialAnnotation">
		<echo>Retrieve ANNOTATION plugin minify javascript resource - version ${depver.annotation}</echo>
		<mkdir dir="${retrieve.dir}" />
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${retrieve.dir}" includes="${javascript.annotation.minify.file}" />
		</delete>
		<get src="https://cdn.jsdelivr.net/npm/chartjs-plugin-annotation@${depver.annotation}" dest="${retrieve.dir}/${javascript.annotation.minify.file}" />
	</target>

	<target name="retrieveOfficialZoom">
		<echo>Retrieve ZOOM plugin minify javascript resource - version ${depver.zoom}</echo>
		<mkdir dir="${retrieve.dir}" />
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${retrieve.dir}" includes="${javascript.zoom.minify.file}" />
		</delete>
		<get src="https://cdn.jsdelivr.net/npm/chartjs-plugin-zoom@${depver.zoom}" dest="${retrieve.dir}/${javascript.zoom.minify.file}" />
		<echo>Retrieve HAMMER minify javascript resource - version ${depver.hammer}</echo>
		<mkdir dir="${retrieve.dir}" />
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${retrieve.dir}" includes="${javascript.hammer.minify.file}" />
		</delete>
		<get src="https://cdn.jsdelivr.net/npm/hammerjs@${depver.hammer}" dest="${retrieve.dir}/${javascript.hammer.minify.file}" />
	</target>

	<target name="retrieveOfficialLuxon">
		<echo>Retrieve LUXON CHART.JS date adapter minify javascript resource - version ${depver.chartjs.luxon}</echo>
		<mkdir dir="${retrieve.dir}" />
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${retrieve.dir}" includes="${javascript.chartjs.luxon.minify.file}" />
		</delete>
		<get src="https://cdn.jsdelivr.net/npm/chartjs-adapter-luxon@${depver.chartjs.luxon}" dest="${retrieve.dir}/${javascript.chartjs.luxon.minify.file}" />
		<echo>Retrieve LUXON minify javascript resource - version ${depver.luxon}</echo>
		<mkdir dir="${retrieve.dir}" />
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${retrieve.dir}" includes="${javascript.luxon.minify.file}" />
		</delete>
		<get src="https://cdn.jsdelivr.net/npm/luxon@${depver.luxon}" dest="${retrieve.dir}/${javascript.luxon.minify.file}" />
	</target>

	<target name="retrieveOfficialGeo">
		<echo>Retrieve GEO controller minify javascript resource - version ${depver.geo}</echo>
		<mkdir dir="${retrieve.dir}" />
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${retrieve.dir}" includes="${javascript.geo.minify.file}" />
		</delete>
		<get src="https://cdn.jsdelivr.net/npm/chartjs-chart-geo@${depver.geo}" dest="${retrieve.dir}/${javascript.geo.minify.file}" />
	</target>

	<target name="retrieveOfficialTreeMap">
		<echo>Retrieve TREEMAP controller minify javascript resource - version ${depver.treemap}</echo>
		<mkdir dir="${retrieve.dir}" />
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${retrieve.dir}" includes="${javascript.treemap.minify.file}" />
		</delete>
		<get src="https://cdn.jsdelivr.net/npm/chartjs-chart-treemap@${depver.treemap}" dest="${retrieve.dir}/${javascript.treemap.minify.file}" />
	</target>

	<target name="retrieveOfficialMatrix">
		<echo>Retrieve MATRIX controller minify javascript resource - version ${depver.matrix}</echo>
		<mkdir dir="${retrieve.dir}" />
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${retrieve.dir}" includes="${javascript.matrix.minify.file}" />
		</delete>
		<get src="https://cdn.jsdelivr.net/npm/chartjs-chart-matrix@${depver.matrix}" dest="${retrieve.dir}/${javascript.matrix.minify.file}" />
	</target>

	<target name="retrieveOfficialSankey">
		<echo>Retrieve SANKEY controller minify javascript resource - version ${depver.sankey}</echo>
		<mkdir dir="${retrieve.dir}" />
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${retrieve.dir}" includes="${javascript.sankey.minify.file}" />
		</delete>
		<get src="https://cdn.jsdelivr.net/npm/chartjs-chart-sankey@${depver.sankey}" dest="${retrieve.dir}/${javascript.sankey.minify.file}" />
	</target>

	<target name="retrieveOfficialGradient">
		<echo>Retrieve GRADIENT pluginminify javascript resource - version ${depver.sankey}</echo>
		<mkdir dir="${retrieve.dir}" />
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${retrieve.dir}" includes="${javascript.gradient.minify.file}" />
		</delete>
		<get src="https://cdn.jsdelivr.net/npm/chartjs-plugin-gradient@${depver.gradient}" dest="${retrieve.dir}/${javascript.gradient.minify.file}" />
	</target>

</project>